//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAVideoCaptureViewDelegate-Protocol.h"

@class NSDictionary, NSMutableArray, NSString, NSTimer, WACallProviderDelegate, WATerminatedCallInfo, WATimer, WAVideoCaptureView, WAVideoRenderView;
@protocol OS_dispatch_queue;

@interface CallManager : NSObject <WAVideoCaptureViewDelegate>
{
    NSObject<OS_dispatch_queue> *_recording_write_queue;
    BOOL _voipInited;
    NSObject<OS_dispatch_queue> *_voip_queue;
    NSObject<OS_dispatch_queue> *_notification_queue;
    NSTimer *_vibrationTimer;
    int _callWakeupSource;
    int _callUISource;
    BOOL _uploadFieldStatsAtCallEnd;
    CDStruct_ff1d51a0 _saved_field_stats;
    int _userRating;
    NSString *_userRatingText;
    unsigned int _userRatingProblems;
    BOOL _sendUserRating;
    BOOL _savedFieldStatsValid;
    int _vibrateSecs;
    unsigned long _reflexiveIPfromChatd;
    NSTimer *_pollAudioInterruptionTimer;
    BOOL _audioInterruptionPoll;
    BOOL _audioRestartOnRouteChange;
    BOOL _peerIdentityVerification;
    BOOL _usingBackCamera;
    NSTimer *_incomingCallLocalNotificationTimer;
    NSTimer *_upgradeCallLocalNotificationTimer;
    BOOL _endCallInProgress;
    int _spamCallThresholdSeconds;
    WATerminatedCallInfo *_lastCallInfo;
    WACallProviderDelegate *_callProviderDelegate;
    BOOL _isVideoCall;
    BOOL _startedAsVideoCall;
    float _dimScreenInVideoCallPercentage;
    BOOL _isScreenDimmed;
    BOOL _needsUninitializeCall;
    WATimer *_uninitializeCallTimer;
    BOOL _shouldUploadLogs;
    int _rekeyTransactionID;
    BOOL _shouldEnableAudioVideoSwitchNextCall;
    BOOL _isSelfRequestingVideoUpgrade;
    BOOL _isPeerRequestingVideoUpgrade;
    BOOL _pendingCall;
    NSDictionary *_currentCallNotificationInfo;
    unsigned long _previousAudioCategory;
    NSMutableArray *_offlineStanzaList;
    WATimer *_ongoingCallTimer;
    WATimer *_callUpgradeRequestTimer;
    double _callWatchDogStartTs;
    int _timeoutSecs;
    id _outgoingSoundActivity;
    id _incomingSoundActivity;
    id _callActivity;
    unsigned long _callSoundPlayer;
    BOOL _e2eDecryptFailed;
    BOOL _isCallerKnown;
    BOOL _isCaller;
    BOOL _callConnected;
    BOOL _callFailed;
    BOOL _callTimedout;
    BOOL _callEndedByUser;
    BOOL _relayBindsFailed;
    BOOL _callRejected;
    BOOL _callBlocked;
    BOOL _shouldAutoAcceptTheCallFromPush;
    BOOL _restartAudioStreamOnCallActive;
    BOOL _rxTrafficStopped;
    BOOL _callRejectedViaNotificationAction;
    BOOL _showRatingScreenForCall;
    BOOL _shouldEnableAudioVideoSwitch;
    BOOL _badASN;
    BOOL _peerBadASN;
    BOOL _videoPreviewCreatedAndMinimized;
    BOOL _videoDecodeStarted;
    BOOL _videoDecodePaused;
    NSString *_peerJid;
    NSString *_peerDisplayName;
    NSString *_peerFirstName;
    NSString *_rejectReason;
    NSString *_callIdFromPush;
    NSString *_callOfferPushName;
    NSString *_callOfferElapsedTime;
    NSString *_callIdFromLocalNotification;
    NSString *_callIdFromOffer;
    NSString *_callPeerPlatform;
    NSString *_callPeerVersion;
    WAVideoRenderView *_peerVideoSubview;
    WAVideoCaptureView *_previewVideoSubview;
    int _batteryLevelAtCallStart;
    int _callStartDelay;
    int _micSource;
}

+ (BOOL)isCellularCallActive;
+ (id)getPeerDisplayNameWithJid:(id)arg1;
+ (BOOL)isVideoCallEnabled;
+ (id)sharedManager;
@property(nonatomic) int micSource; // @synthesize micSource=_micSource;
@property(nonatomic) int callStartDelay; // @synthesize callStartDelay=_callStartDelay;
@property(nonatomic) int batteryLevelAtCallStart; // @synthesize batteryLevelAtCallStart=_batteryLevelAtCallStart;
@property(readonly, nonatomic) WACallProviderDelegate *callProviderDelegate; // @synthesize callProviderDelegate=_callProviderDelegate;
@property(retain, nonatomic) WAVideoCaptureView *previewVideoSubview; // @synthesize previewVideoSubview=_previewVideoSubview;
@property(retain, nonatomic) WAVideoRenderView *peerVideoSubview; // @synthesize peerVideoSubview=_peerVideoSubview;
@property(nonatomic, getter=isVideoDecodePaused) BOOL videoDecodePaused; // @synthesize videoDecodePaused=_videoDecodePaused;
@property(nonatomic, getter=isVideoDecodeStarted) BOOL videoDecodeStarted; // @synthesize videoDecodeStarted=_videoDecodeStarted;
@property(nonatomic) BOOL videoPreviewCreatedAndMinimized; // @synthesize videoPreviewCreatedAndMinimized=_videoPreviewCreatedAndMinimized;
@property(readonly, nonatomic) BOOL peerBadASN; // @synthesize peerBadASN=_peerBadASN;
@property(readonly, nonatomic) BOOL badASN; // @synthesize badASN=_badASN;
@property(readonly, nonatomic) BOOL shouldEnableAudioVideoSwitch; // @synthesize shouldEnableAudioVideoSwitch=_shouldEnableAudioVideoSwitch;
@property(readonly, nonatomic) BOOL showRatingScreenForCall; // @synthesize showRatingScreenForCall=_showRatingScreenForCall;
@property(copy, nonatomic) NSString *callPeerVersion; // @synthesize callPeerVersion=_callPeerVersion;
@property(copy, nonatomic) NSString *callPeerPlatform; // @synthesize callPeerPlatform=_callPeerPlatform;
@property(nonatomic) BOOL callRejectedViaNotificationAction; // @synthesize callRejectedViaNotificationAction=_callRejectedViaNotificationAction;
@property(nonatomic, getter=isRxTrafficStopped) BOOL rxTrafficStopped; // @synthesize rxTrafficStopped=_rxTrafficStopped;
@property(nonatomic) BOOL restartAudioStreamOnCallActive; // @synthesize restartAudioStreamOnCallActive=_restartAudioStreamOnCallActive;
@property(copy, nonatomic) NSString *callIdFromOffer; // @synthesize callIdFromOffer=_callIdFromOffer;
@property(copy, nonatomic) NSString *callIdFromLocalNotification; // @synthesize callIdFromLocalNotification=_callIdFromLocalNotification;
@property(nonatomic) BOOL shouldAutoAcceptTheCallFromPush; // @synthesize shouldAutoAcceptTheCallFromPush=_shouldAutoAcceptTheCallFromPush;
@property(copy, nonatomic) NSString *callOfferElapsedTime; // @synthesize callOfferElapsedTime=_callOfferElapsedTime;
@property(copy, nonatomic) NSString *callOfferPushName; // @synthesize callOfferPushName=_callOfferPushName;
@property(copy, nonatomic) NSString *callIdFromPush; // @synthesize callIdFromPush=_callIdFromPush;
@property(copy, nonatomic) NSString *rejectReason; // @synthesize rejectReason=_rejectReason;
@property(nonatomic) BOOL callBlocked; // @synthesize callBlocked=_callBlocked;
@property(nonatomic) BOOL callRejected; // @synthesize callRejected=_callRejected;
@property(nonatomic) BOOL relayBindsFailed; // @synthesize relayBindsFailed=_relayBindsFailed;
@property(nonatomic) BOOL callEndedByUser; // @synthesize callEndedByUser=_callEndedByUser;
@property(nonatomic) BOOL callTimedout; // @synthesize callTimedout=_callTimedout;
@property(nonatomic) BOOL callFailed; // @synthesize callFailed=_callFailed;
@property(nonatomic) BOOL callConnected; // @synthesize callConnected=_callConnected;
@property(readonly, nonatomic) BOOL isCaller; // @synthesize isCaller=_isCaller;
@property(readonly, nonatomic) BOOL isCallerKnown; // @synthesize isCallerKnown=_isCallerKnown;
@property(copy, nonatomic) NSString *peerFirstName; // @synthesize peerFirstName=_peerFirstName;
@property(copy, nonatomic) NSString *peerDisplayName; // @synthesize peerDisplayName=_peerDisplayName;
@property(copy, nonatomic) NSString *peerJid; // @synthesize peerJid=_peerJid;
- (void).cxx_destruct;
- (void)captureSessionRuntimeError:(id)arg1;
- (BOOL)shouldProcessRekeyWithTransactionID:(int)arg1;
- (int)getParticipantDetailInfo:(struct wa_call_participant_detail_info_t *)arg1 fromCallInfo:(CDStruct_bed9760d *)arg2 withJID:(id)arg3;
- (void)restoreScreenBrightness;
- (void)dimScreenBrightnessForVideoCall;
- (void)markCallAsTrusted;
- (void)blockCaller;
- (void)markCallAsSpam;
- (BOOL)shouldShowSpamReportView;
- (unsigned int)getVideoState:(id)arg1;
- (unsigned int)videoStateFromCallInfoVideoState:(int)arg1;
- (BOOL)isAudioVideoSwitchSupported:(id)arg1;
- (BOOL)isAudioVideoSwitchEnabled:(id)arg1;
- (void)turnCameraOff;
- (void)turnCameraOn;
- (void)rejectUpgradeToVideoCall:(BOOL)arg1;
- (void)cancelUpgradeToVideoCall:(BOOL)arg1;
- (void)acceptUpgradeToVideoCall;
- (void)handleVideoCallUpgradeCompletion;
- (void)requestUpgradeToVideoCall;
- (void)handleAudioVideoSwitchErrorForSelector:(SEL)arg1 status:(int)arg2;
- (void)videoSessionInterruptionEnded:(id)arg1;
- (void)videoSessionWasInterrupted:(id)arg1;
- (void)deviceOrientationChanged:(int)arg1;
- (void)setPeerVideoBounds:(struct CGRect)arg1 center:(struct CGPoint)arg2 isUserAction:(BOOL)arg3;
- (void)setPeerVideoBounds:(struct CGRect)arg1 center:(struct CGPoint)arg2 animateWithDuration:(double)arg3 isUserAction:(BOOL)arg4;
- (void)setPreviewBounds:(struct CGRect)arg1 center:(struct CGPoint)arg2;
- (void)setPreviewBounds:(struct CGRect)arg1 center:(struct CGPoint)arg2 animateWithDuration:(double)arg3;
- (void)pauseVideoStreamIfActive:(BOOL)arg1;
- (void)switchToCamera:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (struct CGSize)peerVideoSize:(id)arg1;
- (BOOL)peerVideoHasEvenRotation;
- (BOOL)callHasVideo;
- (void)setCallHasVideo:(BOOL)arg1;
- (void)addPeerViewToView:(id)arg1;
- (void)addPreviewToView:(id)arg1;
- (void)destroyPeerVideoView;
- (void)destroyVideoPreview;
- (void)createVideoPreview;
- (void)createVideoPreviewOnVOIPQueue:(BOOL)arg1;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)attemptOutgoingCellularVoiceCallWithPhoneURL:(id)arg1;
- (void)tryOutgoingVoiceCallWithJID:(id)arg1 withVideo:(BOOL)arg2;
- (void)attemptOutgoingVoiceCallWithJID:(id)arg1 callUISource:(int)arg2 withVideo:(BOOL)arg3;
- (void)showMessageForUncallableUserWithJID:(id)arg1;
- (void)cancelCallUpgradeRequestTimeout;
- (void)startCallUpgradeRequestTimeout:(double)arg1;
- (void)cancelCallWatchdog;
- (void)startCallWatchdog:(int)arg1;
- (void)updateAudioCaps:(unsigned int)arg1;
@property(nonatomic) unsigned int extraOpusModes;
- (void)autoRemoveCallCaptures;
- (void)closeRecordingFile:(struct gzFile_s *)arg1;
- (void)saveCallCapture:(void *)arg1 len:(unsigned long)arg2 type:(int)arg3 time:(struct pj_time_val)arg4 fileHandle:(struct gzFile_s *)arg5;
- (id)getCallCaptureDir;
- (void)stopRecordCall;
- (void)recordCallIfEnabled;
- (void)recordForTapeType:(int)arg1;
- (struct gzFile_s *)getRecordFileHandle:(int)arg1;
@property(nonatomic) unsigned int callRecordingOptions;
- (BOOL)isAutoCallRecordingEnabled;
- (double)parseUserIdFromJid:(id)arg1;
- (void)noUserRating;
- (void)submitUserRating:(int)arg1 problemBitmask:(unsigned int)arg2 text:(id)arg3;
- (void)saveFieldStats:(CDStruct_ff1d51a0)arg1;
- (void)submitFieldStatsForMissedIncomingCall:(id)arg1 callOfferElapsedTime:(id)arg2;
- (int)getRadioType;
- (void)submitFieldStatsInternal:(CDStruct_ff1d51a0)arg1;
- (void)submitFieldStats:(CDStruct_ff1d51a0)arg1;
- (void)notifyFallbackToVoiceCall;
- (void)notifyPeerBlockedNetwork;
- (void)notifyBlockedNetwork;
- (void)notifyIncompatibleNetwork;
- (void)handleRelayBindsFailed;
- (void)addMissedCallForJid:(id)arg1 isVideoCall:(BOOL)arg2 ts:(double)arg3 callOfferElapsedTime:(id)arg4;
- (void)addCallEventWithStats:(const struct pjmedia_rtcp_stat *)arg1 peerJID:(id)arg2 txBytes:(unsigned long long)arg3 rxBytes:(unsigned long long)arg4 isVideoCall:(BOOL)arg5;
- (void)restartAudioStream;
- (void)logAndConfigureAudioRoutes;
- (id)descriptionOfAllPorts:(id)arg1;
- (void)applyAudioSettings;
- (BOOL)isCallInterrupted:(id)arg1;
- (BOOL)isMuteEnabled:(id)arg1;
- (void)mute:(BOOL)arg1;
- (int)setAudioOutput:(int)arg1;
- (int)endCallSync:(BOOL)arg1;
- (int)endCall:(BOOL)arg1;
- (void)rejectCall:(CDStruct_b067a95f *)arg1 withReason:(id)arg2 withStanza:(id)arg3;
- (void)rejectCallUnavailableWithBlockedReason:(BOOL)arg1;
- (int)rejectCall;
- (int)acceptCall;
- (id)getCurrentPeerJID;
- (id)getCurrentCallId;
- (BOOL)isCallStateActive;
- (int)getCallState;
- (BOOL)isCallStarted;
- (BOOL)isCallActive;
- (void)stopCallSound;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopIncomingCallVibration;
- (void)onVibrateTimer;
- (void)startIncomingCallVibration;
- (void)playCallSound:(int)arg1;
- (void)do_voip_cleanup;
- (int)doVoIPInit;
- (void)resetCallDataStatsIfNeeded;
- (void)handleSelfVideoStateChanged:(int)arg1;
- (void)handleVideoCallUpgradeRequest;
- (void)handlePeerVideoStateChanged:(int)arg1;
- (void)saveApplicationSettings;
- (void)logVoIP:(const char *)arg1;
- (const char *)getEndPointName:(int)arg1;
- (void)updateNetworkMedium;
- (void)networkStatusChanged:(id)arg1;
- (void)handleNetworkChange;
- (void)sendAckForStanza:(id)arg1 ackType:(id)arg2;
- (void)sendReceiptForStanza:(id)arg1;
- (id)getCallCreatorJidFromStanza:(id)arg1;
- (id)getCallIdFromStanza:(id)arg1;
- (int)convertFromStanza:(id)arg1 buf:(void *)arg2 len:(int *)arg3 maxlen:(int)arg4 msgtype:(char *)arg5 reasonStr:(id *)arg6;
- (void)getRelayElectionFromStanza:(id)arg1 relayElection:(CDStruct_28296d11 *)arg2;
- (void)getRelayLatenciesFromStanza:(id)arg1 relayList:(CDStruct_35227113 *)arg2;
- (void)getClientOptionsFromStanza:(id)arg1;
- (void)getVoIPParamsFromStanza:(id)arg1 voipParam:(struct wa_call_voip_params_t *)arg2 msgType:(int)arg3;
- (void)serializeXmppElement:(id)arg1 to:(id)arg2;
- (void)jsonEscape:(id)arg1 to:(id)arg2;
- (id)serializeVoipParams:(id)arg1;
- (BOOL)isValidFloatParam:(float)arg1 min:(float)arg2 max:(float)arg3 invalidFlag:(char *)arg4;
- (BOOL)isValidParam:(int)arg1 min:(int)arg2 max:(int)arg3 invalidFlag:(char *)arg4;
- (void)getDefaultAndClientVoIPParams:(struct wa_call_voip_params_t *)arg1;
- (void)fillVoIPParam:(struct wa_call_voip_params_t *)arg1 fromStanza:(id)arg2 msgType:(int)arg3;
- (void)getCommonHeader:(CDStruct_b067a95f *)arg1 fromStanza:(id)arg2;
- (void)getRelayInfoFromStanza:(id)arg1 relayInfo:(CDStruct_f7d1c7dd *)arg2;
- (void)getGroupInfoFromStanza:(id)arg1 groupInfo:(struct wa_call_group_info_t *)arg2;
- (void)getTransportCandidatesFromStanza:(id)arg1 candList:(CDStruct_bc3eea8d *)arg2;
- (void)getKeygenVersion:(int *)arg1 fromEncoptElement:(id)arg2;
- (void)getEncryptionBytes:(char *)arg1 length:(int *)arg2 fromEncryptionElement:(id)arg3 registrationElement:(id)arg4 peerJID:(id)arg5 callID:(id)arg6;
- (void)setCallDurationForStanza:(id)arg1;
- (void)setEncoptElementForStanza:(id)arg1 keygenVersion:(int)arg2;
- (void)setEncryptionElementForStanza:(id)arg1 encryptionBytes:(id)arg2 encryptionType:(id)arg3 retryCount:(int)arg4;
- (void)generateAndSendMessage:(void *)arg1 messageLength:(int)arg2 toPeer:(const char *)arg3 withEncryptionElement:(char *)arg4 length:(int)arg5;
- (id)convertToStanza:(char *)arg1 len:(int)arg2 cipherBytes:(id)arg3 cipherType:(id)arg4;
- (int)voipStanzaTypeFromString:(id)arg1;
- (id)voipStanzaStringFromType:(int)arg1;
- (void)sendCallReceiptOrAck:(id)arg1;
- (void)sendCallStanza:(id)arg1;
- (void)sanityCheck:(id)arg1;
- (BOOL)isLargeStanza:(id)arg1;
- (void)showLocalCallNotificationWithMissed:(BOOL)arg1 video:(BOOL)arg2 pushName:(id)arg3 peerJid:(id)arg4 callId:(id)arg5;
- (void)handleCallStanzaTimeout:(id)arg1;
- (void)handleCallOfferReceipt:(id)arg1;
- (void)handleCallAck:(id)arg1;
- (void)handleVideoStateChangedAck:(id)arg1;
- (void)handleCallOfferAck:(id)arg1;
- (BOOL)handelCallAccepted:(id)arg1;
- (void)handleCallStateOnEnteringForeground;
- (BOOL)timeoutCallIfNeeded;
- (void)uninitializeCallStateIfNeeded;
- (void)setNeedsUninitializeCallState;
- (void)restorePreviousAudioCategory;
- (BOOL)pollForAudioSession;
- (void)showVideoCallUpgradeNotification;
- (void)startUpgradeCallNotificationTimer;
- (void)cancelUpgradeCallNotificationTimer;
- (void)upgradeToVideoCallNotificationTimerFired:(id)arg1;
- (void)startIncomingCallNotificationTimer;
- (void)cancelIncomingCallNotificationTimer;
- (void)incomingCallLocalNotificationTimerFired:(id)arg1;
- (void)callInterruptionDidEnd:(id)arg1;
- (void)callInterruptionDidBegin:(id)arg1;
- (void)startVoipAudioSessionIfNecessaryForVideoCall:(BOOL)arg1;
- (void)initializeCallStateWithCaller:(BOOL)arg1 peerJid:(id)arg2 pushName:(id)arg3 callOfferElapsedTime:(id)arg4 isVideo:(BOOL)arg5;
- (int)startCallWith:(id)arg1 withVideo:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCallWakeupSource:(id)arg1;
- (void)notifyEndofOffline;
- (int)retryCountFromOffer:(id)arg1;
- (BOOL)videoForStanza:(id)arg1;
- (id)callIdForStanza:(id)arg1;
- (int)innerTypeForStanza:(id)arg1;
- (void)processIncomingCallStanza:(id)arg1;
- (int)handleIncomingSignalingMessage:(void *)arg1 len:(unsigned int)arg2;
- (void)receiptOrAckStanza:(id)arg1;
- (void)handleIncomingCallStanza:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

