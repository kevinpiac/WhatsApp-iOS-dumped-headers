//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVCaptureAudioDataOutputSampleBufferDelegate-Protocol.h"
#import "AVCaptureMetadataOutputObjectsDelegate-Protocol.h"
#import "AVCaptureVideoDataOutputSampleBufferDelegate-Protocol.h"
#import "WACameraPreviewViewDelegate-Protocol.h"

@class AVAssetWriter, AVAssetWriterInput, AVCaptureAudioDataOutput, AVCaptureDeviceInput, AVCaptureMetadataOutput, AVCaptureOutput, AVCaptureSession, AVCaptureVideoDataOutput, NSArray, NSMutableDictionary, NSSet, NSString, UIView, WAAudioActivity, WACameraPreviewView;
@protocol WACameraControllerDelegate;

@interface WACameraController : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate, AVCaptureMetadataOutputObjectsDelegate, AVCaptureAudioDataOutputSampleBufferDelegate, WACameraPreviewViewDelegate>
{
    WACameraPreviewView *_previewView;
    NSMutableDictionary *_faceObjects;
    BOOL _isChangingCamerasInteractively;
    double _lastAutoFocusOnFaceTime;
    BOOL _startSessionOnDidEnterForeground;
    WAAudioActivity *_playbackAndRecordAudioActivity;
    unsigned int _recordingState;
    AVCaptureSession *_captureSession;
    AVCaptureSession *_audioCaptureSession;
    AVCaptureDeviceInput *_videoDeviceInput;
    AVCaptureDeviceInput *_audioDeviceInput;
    AVCaptureOutput *_photoOutput;
    AVCaptureVideoDataOutput *_videoDataOutput;
    AVCaptureAudioDataOutput *_audioDataOutput;
    AVCaptureMetadataOutput *_metadataOutput;
    AVAssetWriterInput *_audioWriterInput;
    AVAssetWriterInput *_videoWriterInput;
    struct opaqueCMFormatDescription *_audioFormatDescription;
    struct opaqueCMFormatDescription *_videoFormatDescription;
    BOOL _needsReexposure;
    struct CGPoint _exposurePointOfInterest;
    unsigned long long _exposureLockID;
    AVAssetWriter *_assetWriter;
    BOOL _isAssetWriterSessionStarted;
    BOOL _needsFinishAssetWriterSession;
    int _acceptSampleBuffersLock;
    BOOL _isAssetWriterAcceptingSampleBuffers;
    int _videoSampleTimeLock;
    CDStruct_1b6d18a9 _timeOfFirstAppendedVideoSampleBuffer;
    CDStruct_1b6d18a9 _timeOfLastAppendedVideoSampleBuffer;
    CDStruct_1b6d18a9 _maximumRecordingDuration;
    BOOL _needsStartAssetWriterWhenAudioFormatDescriptionIsReady;
    int _videoOrientationForAssetWriter;
    int _recordingIndex;
    // Error parsing type: Ai, name: _startSessionCounter
    CDStruct_1b6d18a9 _originalExposureDurationOfFrontCamera;
    BOOL _useBackCamera;
    BOOL _exposurePointOfInterestSupported;
    BOOL _focusPointOfInterestSupported;
    BOOL _pretendingToSupportFlash;
    BOOL _flashActive;
    BOOL _running;
    BOOL _lowLightModeEnabled;
    id <WACameraControllerDelegate> _delegate;
    int _cameraMode;
    NSSet *_supportedFlashModes;
    int _flashMode;
    float _maximumZoomFactor;
    float _currentZoomFactor;
}

+ (int)imageOrientationForSourceVideoOrientation:(int)arg1 targetVideoOrientation:(int)arg2 backFacingCamera:(BOOL)arg3;
+ (int)numberOfRightAnglesForVideoOrientation:(int)arg1;
+ (int)videoOrientationForDeviceOrientation:(int)arg1;
+ (id)videoCaptureDeviceWithPreferredPositioniOS9:(int)arg1;
+ (id)videoCaptureDeviceWithPreferredPositioniOS10:(int)arg1;
+ (id)videoCaptureDeviceWithPreferredPosition:(int)arg1;
+ (BOOL)hasActiveInstances;
+ (void)recoverUnsavedMediaIfNeeded;
+ (id)temporaryMediaPathWithExtension:(id)arg1;
+ (id)cameraMediaDirectory;
+ (void)showCameraAccessReminderScreenForSource:(int)arg1;
+ (void)requestCameraPermissionWithCompletionHandler:(CDUnknownBlockType)arg1;
+ (void)setUpPersistentAudioActivityIfNeeded;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)initialize;
@property(nonatomic, getter=isLowLightModeEnabled) BOOL lowLightModeEnabled; // @synthesize lowLightModeEnabled=_lowLightModeEnabled;
@property(readonly, nonatomic, getter=isRunning) BOOL running; // @synthesize running=_running;
@property(readonly, nonatomic) float currentZoomFactor; // @synthesize currentZoomFactor=_currentZoomFactor;
@property(readonly, nonatomic) float maximumZoomFactor; // @synthesize maximumZoomFactor=_maximumZoomFactor;
@property(readonly, nonatomic, getter=isFlashActive) BOOL flashActive; // @synthesize flashActive=_flashActive;
@property(readonly, nonatomic) int flashMode; // @synthesize flashMode=_flashMode;
@property(readonly, nonatomic, getter=isPretendingToSupportFlash) BOOL pretendingToSupportFlash; // @synthesize pretendingToSupportFlash=_pretendingToSupportFlash;
@property(readonly, nonatomic) NSSet *supportedFlashModes; // @synthesize supportedFlashModes=_supportedFlashModes;
@property(readonly, nonatomic) BOOL focusPointOfInterestSupported; // @synthesize focusPointOfInterestSupported=_focusPointOfInterestSupported;
@property(readonly, nonatomic) BOOL exposurePointOfInterestSupported; // @synthesize exposurePointOfInterestSupported=_exposurePointOfInterestSupported;
@property(readonly, nonatomic) int cameraMode; // @synthesize cameraMode=_cameraMode;
@property(readonly, nonatomic) BOOL useBackCamera; // @synthesize useBackCamera=_useBackCamera;
@property(readonly, nonatomic) UIView *previewView; // @synthesize previewView=_previewView;
@property(nonatomic) __weak id <WACameraControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)enableLowLightMode;
- (void)disableLowLightMode;
- (void)updateISO:(float)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)handleCaptureSessionRuntimeError:(id)arg1;
- (void)mediaServicesWereReset:(id)arg1;
- (void)mediaServicesWereLost:(id)arg1;
- (void)captureDeviceSubjectAreaDidChange:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (void)cameraPreviewViewDidChangeImageSize:(id)arg1;
@property(readonly, nonatomic) struct CGSize previewImageSize;
- (void)getZoomFactorWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)internalSetZoomFactor:(float)arg1 ofCaptureDeviceInput:(id)arg2;
- (void)setZoomFactor:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (float)maximumZoomFactorForCaptureDeviceInput:(id)arg1;
- (void)updatePointOfInterestWithFaceMetadata;
@property(readonly, copy, nonatomic) NSArray *faceObjects;
- (id)faceObjectWithMetadataObject:(id)arg1 fromConnection:(id)arg2;
- (id)qrCodeObjectWithMetadataObject:(id)arg1;
- (void)captureOutput:(id)arg1 didOutputMetadataObjects:(id)arg2 fromConnection:(id)arg3;
- (void)setUpMetadataOutputForCameraMode:(int)arg1;
@property(readonly) CDStruct_1b6d18a9 durationOfCurrentVideoRecording;
- (void)finishAssetWriterSession;
- (void)appendSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 toWriterInput:(id)arg2;
- (void)cleanUpAfterRecording;
- (void)didFailToPrepareRecording;
- (void)startAssetWriterSessionWithVideoOrientation:(int)arg1;
- (void)cancelVideoRecording;
- (void)stopVideoRecording;
- (void)resetCaptureDeviceAfterVideoRecording:(id)arg1;
- (void)prepareCaptureDeviceForVideoRecording:(id)arg1;
- (BOOL)startVideoRecordingWithVideoOrientation:(int)arg1;
@property(readonly, nonatomic, getter=isRecordingVideo) BOOL recordingVideo;
@property(readonly, nonatomic, getter=isInLowLightMode) BOOL inLowLightMode;
@property(readonly, nonatomic, getter=isReadyForPhotoCapture) BOOL readyForPhotoCapture;
@property(readonly, nonatomic, getter=isReadyForVideoRecording) BOOL readyForVideoRecording;
- (void)performStillImageCaptureAnimation;
- (void)performPhotoCaptureBlock:(CDUnknownBlockType)arg1;
- (void)exposeAtPoint:(struct CGPoint)arg1;
- (void)exposeAndFocusWithMode:(int)arg1 atDevicePoint:(struct CGPoint)arg2 monitorSubjectAreaChange:(BOOL)arg3;
- (void)resetPointOfInterest;
- (void)setPointOfInterest:(struct CGPoint)arg1;
- (id)supportedFlashModesForCurrentDevice;
- (void)internalSetFlashMode:(int)arg1;
- (void)setFlashMode:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)internalSetUseBackCamera:(BOOL)arg1 preserveRelativeZoomFactor:(BOOL)arg2 forCameraMode:(int)arg3;
- (void)startRunningAudioCaptureSessionIfPossible;
- (void)setUseBackCamera:(BOOL)arg1 preserveRelativeZoomFactor:(BOOL)arg2 forCameraMode:(int)arg3 fromQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setUseBackCamera:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)tryToUnstickCameraWithCompletion:(CDUnknownBlockType)arg1;
- (void)stopLowLightMode;
- (void)startLowLightMode;
- (void)stopRunning;
- (void)startRunning;
- (void)prepareToTearDownCameraWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)stopObservingCaptureDevice:(id)arg1;
- (void)startObservingCaptureDevice:(id)arg1;
- (void)dealloc;
- (id)initWithCameraMode:(int)arg1 useBackCamera:(BOOL)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

